services:
  mailman-core:
    build:
      context: mailman
      dockerfile: Dockerfile
    container_name: mailman-core
    hostname: mailman-core
    restart: unless-stopped
    volumes:
    - /opt/mailman/core:/opt/mailman/
    stop_grace_period: 30s
    links:
    - database:database
    depends_on:
      database:
        condition: service_healthy
    environment:
    - DATABASE_URL=postgresql://mailman:mailmanpass@database/mailmandb
    - DATABASE_TYPE=postgres
    - DATABASE_CLASS=mailman.database.postgresql.PostgreSQLDatabase
    - HYPERKITTY_API_KEY=someapikey
    ports:
    - "8001:8001" # API
    - "8024:8024" # LMTP - incoming emails

  mailman-web:
    image: maxking/mailman-web:0.4 # Use a specific version tag (tag latest is not published)
    container_name: mailman-web
    hostname: mailman-web
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    links:
    - mailman-core:mailman-core
    - database:database
    volumes:
    - /opt/mailman/web:/opt/mailman-web-data
    environment:
    - DATABASE_TYPE=postgres
    - DATABASE_URL=postgresql://mailman:mailmanpass@database/mailmandb
    - HYPERKITTY_API_KEY=someapikey
    - SECRET_KEY=somesecretkey
    - SERVE_FROM_DOMAIN=rc-ce-dev-mail.syr.edu
    - MAILMAN_ADMIN_USER=lppekows
    - MAILMAN_ADMIN_EMAIL=lppekows@syr.edu
    - SECRET_KEY=mooseymcmoose

  database:
    environment:
    - POSTGRES_DB=mailmandb
    - POSTGRES_USER=mailman
    - POSTGRES_PASSWORD=mailmanpass
    image: postgres:12-alpine
    volumes:
    - /opt/mailman/database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname mailmandb --username mailman"]
      interval: 10s
      timeout: 5s
      retries: 5

  proxy:
    init: true
    container_name: proxy
    build:
      context: proxy
      dockerfile: docker/Dockerfile
      args:
        FQDN: ${FQDN}
    environment:
      FQDN: ${FQDN}
    volumes:
      - letsencrypt:/etc/letsencrypt
      - /opt/mailman/web:/opt/mailman-web-data
    depends_on:
      - "mailman-web"
    ports:
      - 8443:8443  # Set up to proxy mailman-web:8000

  mailhog:
    # fake smtp server to receive all email traffic and test notifications.
    init: true
    container_name: mailhog
    image: mailhog/mailhog
    command: ["-smtp-bind-addr", "0.0.0.0:25"]
    user: root
    expose:
      - 25
      - 8025
    ports:
      - 8025:8025
    healthcheck:
      test: echo | telnet 127.0.0.1 25
    #depends_on:
      #- "database"
      #- "dcc"

volumes:
  letsencrypt:


